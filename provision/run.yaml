---
- name: "Playing with Ansible and Git"
  hosts: localhost
  become: no
  connection: local

  tasks:
    - name: 'Delete any minikube clusters that might be running'
      command: minikube delete

    - name: 'Start our minikube cluster'
      command: minikube start --addons=ingress --cpus=4 --cni=flannel --install-addons=true --kubernetes-version=stable --memory=6g

    - name: 'Start the AWX operator'
      command: minikube kubectl -- apply -f https://raw.githubusercontent.com/ansible/awx-operator/0.13.0/deploy/awx-operator.yaml

    - name: 'Start the AWX application'
      command: minikube kubectl -- apply -f /app/awx-demo.yml

    - name: Monitor the AWX startup
      command:
        cmd: minikube kubectl -- logs deployments/awx-operator
      register: awx_status
      until: "'TASK [installer : Cleanup & Set garbage collection refs] ***********************' in awx_status.stdout_lines"
      retries: 30 # This can take a while
      delay: 30

    - name: 'Determin the ip and port of the AWX application'
      command: minikube service awx-demo-service --url
      register: service_url

    - name: 'Write the Caddyfile'
      template:
        src: "/provision/templates/Caddyfile.j2"
        dest: "/etc/caddy/Caddyfile"
      vars:
        proxy: "{{ service_url.stdout|regex_replace('http://'|regex_escape(), '') }}"
      become: yes

    - name: 'Start Caddy'
      service:
        name: caddy
        state: reloaded
      become: yes

    - name: 'Determin the admin password'
      shell: minikube kubectl -- get secret awx-demo-admin-password --output jsonpath="{.data.password}" | base64 --decode
      register: awx_password

    - name: 'Add AWS config'
      lineinfile:
        path: /home/vagrant/.bashrc
        line: "{{ item }}"
      with_items:
        - "export TOWER_HOST=http://localhost"
        - "export TOWER_USERNAME=admin"
        - "export TOWER_PASSWORD={{ awx_password.stdout }}"


    # - name: 'Create AWX configuration directory'
    #   file:
    #     path: /etc/awx
    #     state: directory
    #   become: yes

    # - name: 'Configure AWX CLI'
    #   template:
    #     src: "/provision/templates/awx_cli.j2"
    #     dest: "{{ item }}"
    #   vars:
    #     password: "{{ awx_password.stdout }}"
    #   become: yes
    #   with_items:
    #     - /etc/awx/tower_cli.cfg
    #     - /root/tower_cli.cfg
    #     - /home/vagrant/tower_cli.cfg
    #     - /etc/awx/awx_cli.cfg
    #     - /root/awx_cli.cfg
    #     - /home/vagrant/awx_cli.cfg
